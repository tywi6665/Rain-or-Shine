{"version":3,"sources":["hooks/useGeolocation.js","components/Background/Background.js","components/Container/Container.js","components/WeatherIcon/WeatherIcon.js","components/WeatherDetail/WeatherDetail.js","components/Tilt/utils/getPosition.js","components/Tilt/Tilt.js","components/ForecastPlot/ForecastPlot.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["useGeolocation","watchId","_useState","useState","lat","lng","_useState2","Object","slicedToArray","state","setState","mounted","onEvent","event","coords","latitude","longitude","onEventError","error","useEffect","navigator","geolocation","getCurrentPosition","watchPosition","clearWatch","Background","_ref","dayOrNight","currentWeather","react_default","a","createElement","className","concat","Fragment","style","background","array","toConsumableArray","Array","keys","map","index","key","rainOrSnow","Container","props","gridArea","children","WeatherIcon","icon","size","WeatherDetail","weatherInfo","weatherCondition","translate","textIndent","getPosition","e","rect","currentTarget","getBoundingClientRect","ax","clientX","left","ay","clientY","top","x","round","width","y","height","value","Math","max","min","Tilt","position","setPosition","_useState3","_useState4","transitionTime","setTranistionTime","onMouseEnter","useCallback","setTimeout","onMouseMove","onMouseLeave","hover","transform","transition","ForecastPlot","forecast","windowWidth","isMetric","setForecastData","forecastDataArr","forEach","data","push","date","time","temp","temperatureHigh","tempTime","temperatureHighTime","replace","temperatureLow","temperatureLowTime","Number","toString","slice","d3","remove","margin","right","bottom","parseDate","maxTemp","reduce","b","minTemp","svg","append","attr","domain","length","range","d","xAxis","yAxis","lineGenerator","curve","call","tickFormat","text","selectAll","offset","color","enter","datum","i","on","this","duration","div","delay","html","split","join","pageX","pageY","plot","API","getWeather","location","axios","get","process","getGeocode","App","windBearing","setCurrentWeather","dailyWeather","setDailyWeather","_useState5","_useState6","setDayOrNight","_useState7","_useState8","setIsMetric","_useState9","_useState10","setLocation","_useState11","_useState12","setGeolocation","_useState13","window","innerWidth","_useState14","setWindowWidth","handleResize","addEventListener","removeEventListener","then","res","currently","daily","modifiedCurrentTime","Date","now","sunriseTime","sunsetTime","onSubmit","preventDefault","results","geometry","type","placeholder","onChange","target","id","htmlFor","components_Background_Background","components_Container_Container","summary","components_Tilt_Tilt","components_WeatherDetail_WeatherDetail","temperature","ceil","humidity","precipProbability","components_WeatherIcon_WeatherIcon","windSpeed","floor","fontSize","uvIndex","components_ForecastPlot_ForecastPlot","href","rel","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.954ac873.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useGeolocation = () => {\r\n    const [state, setState] = useState({\r\n        lat: null,\r\n        lng: null\r\n    });\r\n\r\n    let mounted = true;\r\n    let watchId;\r\n\r\n    const onEvent = (event) => {\r\n        if (mounted) {\r\n            setState({\r\n                lat: event.coords.latitude,\r\n                lng: event.coords.longitude\r\n            });\r\n        };\r\n    };\r\n\r\n    const onEventError = (error) => {\r\n        mounted && setState({ lat: \"39.7392\", lng: \"-104.9903\" });\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(onEvent, onEventError);\r\n        watchId = navigator.geolocation.watchPosition(onEvent, onEventError);\r\n\r\n        return () => {\r\n            mounted = false;\r\n            navigator.geolocation.clearWatch(watchId);\r\n        };\r\n    }, []);\r\n\r\n    return state;\r\n};\r\n\r\nexport default useGeolocation;","import React from 'react';\r\nimport \"./Background.scss\";\r\n\r\nconst Background = ({ dayOrNight, currentWeather }) => {\r\n\r\n    function rainOrSnow() {\r\n        const length = 150;\r\n        let array = [...Array(length).keys()];\r\n        return (\r\n            <div className={`${currentWeather}ing`}>\r\n                {\r\n                    array.map(index => (\r\n                        <i className={currentWeather} key={index}></i>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={`backgroundImage ${dayOrNight} ${currentWeather}-background`}>\r\n            {currentWeather === \"cloudy\" || currentWeather === \"rain\" || currentWeather === \"snow\" || currentWeather === \"fog\" ? [\r\n                (<>\r\n                    <div\r\n                        className=\"sky\"\r\n                        style={{ background: \"linear-gradient(to bottom, darkgrey, #ffffff)\" }}\r\n                    ></div>\r\n                    <div className=\"shelf-cloud\">\r\n                        <div className=\"shelf-cloud-left\"></div>\r\n                        <div className=\"shelf-cloud-right\"></div>\r\n                    </div>\r\n                </>),\r\n                (currentWeather === \"rain\" || currentWeather === \"snow\" ? (\r\n                    rainOrSnow()\r\n                ) : (\r\n                        null\r\n                    ))\r\n            ] : [\r\n                    (<div\r\n                        className=\"sky\"\r\n                        style={{ background: \"linear-gradient(to bottom, #845EC2, #D65DB1, #FF6F91, #FF9671, #FFC75F, #F9F871)\" }}\r\n                        key={\"sky\"}\r\n                    >\r\n                    </div>),\r\n                    (dayOrNight === \"night\" ? (\r\n                        <>\r\n                            <div className=\"stars\">\r\n                                <div className=\"star-group1\"></div>\r\n                                <div className=\"star-group2\"></div>\r\n                                <div className=\"star-group3\"></div>\r\n                            </div>\r\n                            <div className=\"moon\">\r\n                                <div className=\"crater crater1\"></div>\r\n                                <div className=\"crater crater2\"></div>\r\n                                <div className=\"crater crater3\"></div>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                            currentWeather === \"cloudy\" || currentWeather === \"rain\" || currentWeather === \"snow\" || currentWeather === \"fog\" ? (\r\n                                null\r\n                            ) : (\r\n                                    <div className=\"sun\" key={\"sun\"}>\r\n                                        <div className=\"ray-container\">\r\n                                            <div className=\"ray ray1\"></div>\r\n                                            <div className=\"ray ray2\"></div>\r\n                                            <div className=\"ray ray3\"></div>\r\n                                            <div className=\"ray ray4\"></div>\r\n                                            <div className=\"ray ray5\"></div>\r\n                                            <div className=\"ray ray6\"></div>\r\n                                            <div className=\"ray ray7\"></div>\r\n                                            <div className=\"ray ray8\"></div>\r\n                                            <div className=\"ray ray9\"></div>\r\n                                            <div className=\"ray ray10\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n\r\n                        ))\r\n                ]}\r\n            <div className=\"clouds\">\r\n                <div className=\"cloud small-cloud cloud1\"></div>\r\n                <div className=\"cloud small-cloud cloud2\"></div>\r\n                <div className=\"cloud large-cloud cloud3\"></div>\r\n                <div className=\"cloud large-cloud cloud4\"></div>\r\n                <div className=\"cloud small-cloud cloud5\"></div>\r\n            </div>\r\n            <div className=\"mountains\">\r\n                <div className={`large-mountain-farleft ${currentWeather === \"snow\" ? \"snow-cap-left\" : \"\"}`}></div>\r\n                <div className={`large-mountain-farright ${currentWeather === \"snow\" ? \"snow-cap-right\" : \"\"}`}></div>\r\n                <div className={`small-mountain-left ${currentWeather === \"snow\" ? \"snow-cap-left\" : \"\"}`}></div>\r\n                <div className={`small-mountain-right ${currentWeather === \"snow\" ? \"snow-cap-right\" : \"\"}`}></div>\r\n                <div className={`medium-mountain-left ${currentWeather === \"snow\" ? \"snow-cap-left\" : \"\"}`}></div>\r\n                <div className={`medium-mountain-right ${currentWeather === \"snow\" ? \"snow-cap-right\" : \"\"}`}></div>\r\n                <div className={`large-mountain-left ${currentWeather === \"snow\" ? \"snow-cap-left\" : \"\"}`}></div>\r\n                <div className={`large-mountain-right ${currentWeather === \"snow\" ? \"snow-cap-right\" : \"\"}`}></div>\r\n                <div className={`medium-mountain-farleft ${currentWeather === \"snow\" ? \"snow-cap-left\" : \"\"}`}></div>\r\n                <div className={`medium-mountain-farright ${currentWeather === \"snow\" ? \"snow-cap-right\" : \"\"}`}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background;","import React from \"react\";\r\nimport \"./Container.scss\";\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <div className={`container ${props.gridArea}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"weather-underground-icons\";\r\n\r\nconst WeatherIcon = (props) => {\r\n    return (\r\n        <i className={`wu wu-black wu-${props.icon} wu-${props.dayOrNight} wu-${props.size} icon ${props.gridArea}`}></i>\r\n    )\r\n}\r\n\r\nexport default WeatherIcon;","import React from \"react\";\r\nimport \"./WeatherDetail.scss\";\r\n\r\nconst WeatherDetail = ({ children, weatherInfo, weatherCondition, translate }) => {\r\n    return (\r\n        <div className=\"weatherDetail\">\r\n            {translate ? (\r\n                <p\r\n                    className={weatherCondition}\r\n                    style={{\r\n                        textIndent: `${weatherInfo === 0 ? (\r\n                            `0`\r\n                        ) : (\r\n                                `${(weatherInfo * 10) - 10}%`\r\n                            )\r\n                        }`\r\n                    }}\r\n                >\r\n                    {weatherInfo}</p>\r\n            ) : (\r\n                    <p\r\n                        className={weatherCondition}\r\n                    >\r\n                        {weatherInfo}</p>\r\n                )}\r\n\r\n            {children}\r\n            <p>{weatherCondition}</p>\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default WeatherDetail;","export const getPosition = e => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const ax = e.clientX - rect.left;\r\n    const ay = e.clientY - rect.top;\r\n    const x = round(((ax / rect.width) * 200) -100);\r\n    const y = round(((ay / rect.height) * 200) -100);\r\n    return {x, y};\r\n};\r\n\r\nconst round = (value) => Math.max(Math.min(value, 100), -100);","import React, { useState, useCallback } from \"react\";\r\nimport { getPosition } from \"./utils/getPosition\";\r\n\r\nconst Tilt = ({ children }) => {\r\n\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const [transitionTime, setTranistionTime] = useState(null)\r\n\r\n    const enterTransitionTime = 100;\r\n    const leaveTransitionTime = 250;\r\n    const maxRotation = 0.2;\r\n    const maxScale = 1;\r\n    const perspective = \"10000px\";\r\n    const easing = \"ease-in-out\";\r\n\r\n    const onMouseEnter = useCallback(\r\n        (e) => {\r\n            setPosition(getPosition(e));\r\n            setTimeout(() => {\r\n                setTranistionTime(0);\r\n            }, transitionTime);\r\n        },\r\n        [transitionTime]\r\n    );\r\n\r\n    const onMouseMove = useCallback(\r\n        (e) => {\r\n            if (!transitionTime) {\r\n                setPosition(getPosition(e));\r\n            }\r\n        },\r\n        [transitionTime]\r\n    );\r\n\r\n    const onMouseLeave = useCallback(\r\n        (e) => {\r\n            setTranistionTime(leaveTransitionTime);\r\n            setTimeout(() => {\r\n                setTranistionTime(enterTransitionTime);\r\n            });\r\n            setPosition({ x: 0, y: 0 });\r\n        },\r\n        []\r\n    );\r\n\r\n    const hover = (position.x || position.y)\r\n\r\n    return (\r\n        <div\r\n            className=\"tilt\"\r\n            onMouseEnter={onMouseEnter}\r\n            onMouseMove={onMouseMove}\r\n            onMouseLeave={onMouseLeave}\r\n        >\r\n            <div\r\n                className=\"innerTilt\"\r\n                style={{\r\n                    transform: `\r\n                        perspective(${perspective})\r\n                        rotateX(${maxRotation * position.y}deg)\r\n                        rotateY(${-maxRotation * position.x}deg)\r\n                        ${hover ? (\r\n                            `scale3d(${maxScale}, ${maxScale}, ${maxScale})`\r\n                        ) : (\r\n                                \"\"\r\n                            )}\r\n                        `,\r\n                    transition: (\r\n                        transitionTime ? (\r\n                            `transfrom ${transitionTime}ms ${easing},\r\n                            filter ${transitionTime}ms ${easing}`\r\n                        ) : (\r\n                            \"\"\r\n                        )\r\n                    )\r\n\r\n                }}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tilt;","import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./ForecastPlot.scss\";\r\nimport \"weather-underground-icons\";\r\n\r\nconst ForecastPlot = ({ forecast, windowWidth, isMetric }) => {\r\n\r\n    const [forecastData, setForecastData] = useState(null)\r\n\r\n    useEffect(() => {\r\n\r\n        if (forecast) {\r\n\r\n            const rawForecastData = forecast;\r\n\r\n            let forecastDataArr = [];\r\n\r\n            rawForecastData.forEach((data) => {\r\n                forecastDataArr.push({\r\n                    date: data.time,\r\n                    temp: data.temperatureHigh,\r\n                    tempTime: data.temperatureHighTime,\r\n                    icon: data.icon.replace(/-/g, \"\").replace(\"day\", \"\").replace(\"night\", \"\")\r\n                });\r\n                forecastDataArr.push({\r\n                    date: data.time,\r\n                    temp: data.temperatureLow,\r\n                    tempTime: data.temperatureLowTime,\r\n                    icon: data.icon.replace(/-/g, \"\").replace(\"day\", \"\").replace(\"night\", \"\")\r\n                })\r\n            });\r\n\r\n            if (isMetric) {\r\n                forecastDataArr.forEach((date) => {\r\n                    date.temp = Number(((date.temp - 32) * 5 / 9).toString().slice(0, 5))\r\n                });\r\n            }\r\n            setForecastData(forecastDataArr);\r\n            plot(forecastDataArr);\r\n        }\r\n    }, [forecast, isMetric, windowWidth])\r\n\r\n    function plot(data) {\r\n\r\n        d3.select(\".d3plot\").remove();\r\n\r\n        const margin = {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 30,\r\n            left: 50\r\n        }\r\n\r\n        let width;\r\n\r\n        if (windowWidth < 550) {\r\n            width = (windowWidth / 1.07) - margin.left - margin.right\r\n        } else {\r\n            width = (windowWidth / 1.15) - margin.left - margin.right\r\n        };\r\n        const height = 555 - margin.top - margin.bottom;\r\n\r\n        const parseDate = d3.timeParse(\"%s\")\r\n\r\n        data.forEach((date) => {\r\n            date.tempTime = parseDate(date.tempTime)\r\n        });\r\n\r\n        const maxTemp = data.reduce(function (a, b) {\r\n            return (a.temp > b.temp) ? a : b;\r\n        });\r\n\r\n        const minTemp = data.reduce(function (a, b) {\r\n            return (b.temp > a.temp) ? a : b;\r\n        });\r\n\r\n        const svg = d3.select(\".plot\")\r\n            .append(\"svg\")\r\n            .attr(\"class\", \"d3plot\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n        const x = d3.scaleTime()\r\n            .domain([data[0].tempTime, data[data.length - 1].tempTime])\r\n            .range([0, width]);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain(d3.extent(data, function (d) { return d.temp }))\r\n            .range([height - 25, 0]);\r\n\r\n        const xAxis = d3.axisBottom(x);\r\n\r\n        const yAxis = d3.axisLeft(y);\r\n\r\n        const lineGenerator = d3.line()\r\n            .curve(d3.curveCardinal)\r\n            .x(function (d) { return x(d.tempTime); })\r\n            .y(function (d) { return y(d.temp); });\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"x axis\")\r\n            .attr(\"transform\", `translate(0, ${height - 20})`)\r\n            .call(xAxis.tickFormat(d3.timeFormat(\"%A\")))\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"class\", \"plotText\")\r\n            .attr(\"transform\", `translate(${(width / 2) - 20}, 0)`)\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(\"7 Day Forecast\");\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"y axis\")\r\n            .call(yAxis)\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"y\", 0 - (margin.left - 10))\r\n            .attr(\"x\", 0 - (height / 2))\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(isMetric ? \"Temperature(C)\" : \"Temperature(F)\");\r\n\r\n        svg.append(\"linearGradient\")\r\n            .attr(\"id\", \"temp-gradient\")\r\n            .attr(\"gradientUnits\", \"userSpaceOnUse\")\r\n            .attr(\"x1\", 0).attr(\"y1\", y(minTemp.temp))\r\n            .attr(\"x2\", 0).attr(\"y2\", y(maxTemp.temp))\r\n            .selectAll(\"stop\")\r\n            .data([\r\n                { offset: \"0%\", color: \"#1A12FE\" },\r\n                { offset: \"100%\", color: \"#FE1212\" }\r\n            ])\r\n            .enter().append(\"stop\")\r\n            .attr(\"offset\", function (d) { return d.offset; })\r\n            .attr(\"stop-color\", function (d) { return d.color; });\r\n\r\n        svg.append(\"path\")\r\n            .datum(data)\r\n            .attr(\"class\", \"line\")\r\n            .attr(\"d\", lineGenerator);\r\n\r\n        svg.selectAll(\".dot\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"circle\")\r\n            .attr(\"class\", \"dot\")\r\n            .attr(\"cx\", function (d, i) { return x(d.tempTime); })\r\n            .attr(\"cy\", function (d) { return y(d.temp); })\r\n            .attr(\"r\", 2.5)\r\n            .on(\"mouseover\", handleMouseOver)\r\n            .on(\"mouseout\", handleMouseOut);\r\n\r\n        const div = d3.select(\".plot\")\r\n            .append(\"div\")\r\n            .attr(\"class\", \"toolTip\")\r\n            .style(\"opacity\", 0);\r\n\r\n        function handleMouseOver(d) {\r\n            d3.select(this)\r\n                .transition()\r\n                .duration(200)\r\n                .attr(\"r\", 10);\r\n\r\n            div.transition()\r\n                .delay(100)\r\n                .duration(200)\r\n                .style(\"opacity\", 0.9);\r\n\r\n            div.html(`<i class=\"wu wu-white wu-${d.icon} wu-64 icon\"></i><br/><strong>${d.temp}º${isMetric ? \"C\" : \"F\"}</strong><br/><p>${d.tempTime.toString().split(\"\").slice(0, 21).join(\"\")}</p>`)\r\n                .style(\"left\", `${d3.event.pageX - 55}px`)\r\n                .style(\"top\", `${d3.event.pageY + 20}px`)\r\n            // .style(\"border-color\", `${rgb}`)\r\n        };\r\n\r\n        function handleMouseOut(d) {\r\n            d3.select(this)\r\n                .transition()\r\n                .attr(\"r\", 2.5);\r\n\r\n            div.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"plot\"></div>\r\n    );\r\n};\r\n\r\nexport default ForecastPlot;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getWeather: function(location) {\r\n        const key = process.env.REACT_APP_DARK_SKY_KEY;\r\n        return axios.get(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${key}/${location.lat},${location.lng}`)\r\n    },\r\n\r\n    getGeocode: function(location) {\r\n        const key = process.env.REACT_APP_GOOGLE_GEOCODER_KEY;\r\n        return axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${key}`)\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\nimport useGeolocation from \"./hooks/useGeolocation\";\nimport Background from './components/Background/Background';\nimport Container from \"./components/Container\";\nimport WeatherIcon from \"./components/WeatherIcon\";\nimport WeatherDetail from \"./components/WeatherDetail\";\nimport Tilt from \"./components/Tilt\";\nimport ForecastPlot from \"./components/ForecastPlot\";\nimport { Icon } from 'antd';\nimport API from \"./utils/API\";\nimport './App.scss';\n\nfunction App() {\n\n  const state = useGeolocation();\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [dailyWeather, setDailyWeather] = useState(null);\n  const [dayOrNight, setDayOrNight] = useState(\"\");\n  const [isMetric, setIsMetric] = useState(false);\n  const [location, setLocation] = useState(\"Current Location\");\n  const [geolocation, setGeolocation] = useState({ lat: null, lng: null })\n  // const [geolocation, setGeolocation] = useState({ lat: \"39.7392\", lng: \"-104.9903\" })\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWindowWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (!geolocation.lat) {\n      setGeolocation({ lat: state.lat, lng: state.lng })\n    }\n    if (geolocation.lat) {\n      API.getWeather(geolocation)\n        .then(res => {\n          let currently = res.data.currently;\n          let daily = res.data.daily.data;\n          currently.icon = currently.icon.replace(/-/g, \"\").replace(\"day\", \"\").replace(\"night\", \"\");\n          setDailyWeather(daily);\n          setCurrentWeather(currently);\n          let modifiedCurrentTime = Number(Date.now().toString().slice(0, 10));\n          if (modifiedCurrentTime > daily[0].sunriseTime && modifiedCurrentTime < daily[0].sunsetTime) {\n            setDayOrNight(\"day\");\n          } else {\n            setDayOrNight(\"night\");\n          }\n        })\n    }\n  }, [geolocation, state.lat, state.lng]);\n\n  function degToCardinal(windBearing) {\n    const cardinalDirections = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"]\n    let value = Math.floor((windBearing / 22.5) + 0.5);\n    return cardinalDirections[(value % 16)];\n  };\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    API.getGeocode(location)\n      .then(res => {\n        setGeolocation(res.data.results[0].geometry.location);\n      })\n  }\n\n  return (\n    <div className=\"app\"\n      style={{\n        color: `${dayOrNight === \"night\" ? (\n          \"whitesmoke\") : (\"black\")\n          }`\n      }}\n    >\n      <form\n        className=\"enterLocation\"\n        onSubmit={handleFormSubmit}\n      >\n        <Icon className=\"searchIcon\" type=\"search\" />\n        <input type=\"search\"\n          placeholder={location}\n          value={location}\n          onChange={e => setLocation(e.target.value)}\n        >\n        </input>\n      </form>\n      <div className=\"unitToggle\">\n        <input type=\"checkbox\" id=\"switch\"\n          onChange={() => { isMetric ? setIsMetric(false) : setIsMetric(true) }}\n        />\n        <label htmlFor=\"switch\"></label>\n      </div>\n      {dayOrNight ? (\n        <Background\n          dayOrNight={dayOrNight}\n          currentWeather={currentWeather.icon}\n          key={currentWeather.icon}\n        />\n      ) : (\n          \"\"\n        )\n      }\n      <Container\n        gridArea={\"header\"}\n      >\n        <p className=\"title\">Welcome to\n          <span className=\"titleRain\">Rain\n            <i className=\"titleRainDrops\"></i>\n            <i className=\"titleRainDrops\"></i>\n            <i className=\"titleRainDrops\"></i>\n            <i className=\"titleRainDrops\"></i>\n            <i className=\"titleRainDrops\"></i>\n          </span>\n          or\n          <span className=\"titleShine\">Shine!</span>\n        </p>\n        <div className=\"scrollingText\">\n          {dailyWeather ? (\n            <p>{dailyWeather[0].summary}</p>\n          ) : (\n              null\n            )}\n        </div>\n      </Container>\n      {currentWeather ? (\n        <>\n          <Tilt>\n            <Container\n              gridArea={\"details\"}\n            >\n              <WeatherDetail\n                weatherCondition={isMetric ? \"Temperature(C)\" : \"Temperature(F)\"}\n                weatherInfo={isMetric ? (\n                  ((currentWeather.temperature - 32) * 5 / 9).toString().slice(0, 5)\n                ) : (\n                    currentWeather.temperature)}\n              >\n                <div className=\"thermometer\"></div>\n              </WeatherDetail>\n              <WeatherDetail\n                weatherCondition={\"Humidity\"}\n                weatherInfo={`${Math.ceil(currentWeather.humidity * 100)}%`}\n              />\n              <WeatherDetail\n                weatherCondition={\"Chance of Precipitation\"}\n                weatherInfo={`${Math.ceil(dailyWeather[0].precipProbability * 100)}%`}\n              >\n                <div className=\"raindrop\"></div>\n              </WeatherDetail>\n              <span></span>\n              <WeatherIcon\n                icon={currentWeather.icon}\n                dayOrNight={dayOrNight}\n                size={windowWidth < 550 ? \"128\" : \"256\"}\n                gridArea={\"weatherDetail\"}\n              />\n              <span></span>\n              <WeatherDetail\n                weatherCondition={isMetric ? \"Wind Speed(kph)\" : \"Wind Speed(mph)\"}\n                weatherInfo={\n                  isMetric ? (\n                    (currentWeather.windSpeed * 1.60934).toString().slice(0, 4)\n                  ) : (\n                      currentWeather.windSpeed)}\n              />\n              <WeatherDetail\n                weatherCondition={\"Wind Direction\"}\n                weatherInfo={degToCardinal(currentWeather.windBearing)}\n              >\n                <Icon\n                  className=\"arrowIcon\"\n                  type=\"arrow-up\"\n                  style={{ transform: `rotate(${currentWeather.windBearing}deg)`, fontSize: \"20px\" }}\n                />\n              </WeatherDetail>\n              <WeatherDetail\n                weatherCondition={\"UV Index\"}\n                translate={true}\n                weatherInfo={currentWeather.uvIndex}\n              >\n                <div className=\"uvScale\"></div>\n              </WeatherDetail>\n            </Container>\n          </Tilt>\n        </>\n      ) : (\n          <div className=\"loadingContent\">\n            <p>Retrieving Weather</p>\n            <Icon type=\"loading\" />\n          </div>\n        )}\n      <Container\n        gridArea={\"weatherPlot\"}\n      >\n        <ForecastPlot\n          forecast={dailyWeather}\n          windowWidth={windowWidth}\n          isMetric={isMetric}\n        />\n      </Container>\n      <Container\n        gridArea={\"footer\"}\n      >\n        <p>Powered by Dark Sky</p>\n        <p>Made by tywi6665</p>\n        <a href=\"https://github.com/tywi6665\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon type=\"github\" />\n        </a>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}